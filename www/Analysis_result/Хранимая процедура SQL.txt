

----ЧЕРНОВИК

DELIMITER //
CREATE PROCEDURE GrupAndSort()
     BEGIN
        CREATE TEMPORARY TABLE temp_test
        SELECT * FROM `Crypto_test`
        LIMIT 10;
     END
     //
DELIMITER ;

CALL GrupAndSort();





BEGIN

	DECLARE i INTEGER DEFAULT 0;	-- для хранения количества строк временной таблицы
    DECLARE w INTEGER DEFAULT 0;	-- для перебора в цыкле
    DECLARE str CHARACTER (50) DEFAULT '';		-- для хранения строки извлекаемой из временной таблицы
    DECLARE create_str_0 CHARACTER (255);
    DECLARE select_str_0 CHARACTER (255);

	DECLARE str_1 CHARACTER (50) DEFAULT '';
	DECLARE str_1_0 CHARACTER (150);
     

       	SELECT `Name` FROM `temp_test` LIMIT w, 1 INTO str;




	DECLARE sort_field_1_0 CHARACTER (150);
	DECLARE group_field_1_0 CHARACTER (150);	
	DECLARE sort_field_1_1 CHARACTER (150);
	DECLARE group_field_1_1 CHARACTER (150);	


	SET sort_field_1_0 = CONCAT('SELECT `', sort_field, '`', ' FROM `temp_test` LIMIT 0, 1 INTO @str' );
	SET group_field_1_0 = CONCAT('SELECT `', group_field, '`', ' FROM `temp_test` LIMIT 0, 1 INTO @str_1' );

	SET @sort_field_1_1 = sort_field_1_0;
	SET @group_field_1_1 = group_field_1_0;

  	PREPARE prep_sort_field_1 FROM @sort_field_1_1;
	EXECUTE prep_sort_field_1;  	

	PREPARE prep_group_field_1 FROM @group_field_1_1;
	EXECUTE prep_group_field_1;

      

 	SET str_1_0 = CONCAT('SELECT `', group_field, '`, `', sort_field, '` FROM `temp_test` LIMIT @w, 1 INTO @str, @str_1');

	SET @str_1_1 = str_1_0;
    PREPARE prep_str_1_1 FROM @str_1_1;
	EXECUTE prep_str_1_1;

END

DECLARE str CHARACTER (50) DEFAULT '';
DECLARE str_1 CHARACTER (50) DEFAULT '';
DECLARE str_1_0 CHARACTER (150);


------ ТО ЧТО РАБОТАЕТ ---------------------------------------


CREATE TABLE `temp_test` AS (SELECT DISTINCT `Name`, `Capitalization` FROM `Crypto_1` ORDER BY `Capitalization` DESC LIMIT 10 );

	SET str_1_0 = CONCAT('SELECT `', group_field, '`, `', sort_field, '` FROM `temp_test` LIMIT 0, 1 INTO @str, @str_1');

	SET @str_1_1 = str_1_0;
	PREPARE prep_str_1_1 FROM @str_1_1;
	EXECUTE prep_str_1_1;


-- внешние параметры:
	depth_of_search	-- для передачи глубины поиска
	table_name	-- для передачи таблицы поиска
	sorting_direction	-- для передачи направления сортировки
	sort_field	-- для передачи поля по которому будет выполняться сортировка
	group_field	-- для передачи поля по которому будет выполняться сортировка

BEGIN

	DECLARE i INTEGER DEFAULT 0;	-- для хранения количества строк временной таблицы
    DECLARE w INTEGER DEFAULT 0;	-- для перебора в цыкле
    DECLARE str CHARACTER (50) ;		-- для хранения строки извлекаемой из временной таблицы
    DECLARE create_str_0 CHARACTER (255);
    DECLARE select_str_0 CHARACTER (255);
	DECLARE str_1_0 CHARACTER (150);
	DECLARE str_1_0_1 CHARACTER (150);
    DECLARE change_param_curent decimal(15,0) DEFAULT 0;		-- для хранения текущего значения параметра изменения которого отслеживаются
	DECLARE change_param_old decimal(15,0) DEFAULT 0;			-- для хранения предыдущего значения параметра изменения которого отслеживаются
    DECLARE difference_change_param decimal(15,0) DEFAULT 0;				-- для хранения разницы текущего и предидущего значений параметра изменения которого отслеживаются

	DROP TABLE IF EXISTS `temp_test`;		-- для тестов

    SET create_str_0 = CONCAT(
		'CREATE /*TEMPORARY*/ TABLE `temp_test` 
			AS (SELECT DISTINCT `',group_field,'`, `', sort_field, '`
				FROM `', table_name, '` 
				GROUP BY `', group_field, '` ASC 
	            ORDER BY ', sort_field,' ', sorting_direction,
	            ' LIMIT ', depth_of_search, '
				)'  
			); 

    SET create_str = create_str_0; 	-- для тестов

	SET @create_str_1 = create_str_0;
    PREPARE prep_create_str FROM @create_str_1;
	EXECUTE prep_create_str;
	
    SELECT COUNT(*) FROM `temp_test` INTO i;

	    ALTER TABLE `temp_test` ADD param_old decimal(15,0);
	    ALTER TABLE `temp_test` ADD param_curent decimal(15,0);
	    ALTER TABLE `temp_test` ADD change_param decimal(15,0); 
	    ALTER TABLE `temp_test` ADD field_str CHARACTER (50); 
	
	WHILE w < i DO
    	
    	-- получаем, построчно, данные из временной таблицы в переменные @str->строка по которой будет формироваться блок, @change_param_curent->параметр изменения которого отслеживаются  
		SET str_1_0 = CONCAT("SELECT `", group_field, "` FROM `temp_test` LIMIT ", w, ", 1 INTO @str");
		SET str_1_0_1 = CONCAT("SELECT `", sort_field, "` FROM `temp_test` LIMIT ", w, ", 1 INTO @change_param_curent");
		SET @str_1_1 = str_1_0;    
	    PREPARE prep_str_1_1 FROM @str_1_1;
		EXECUTE prep_str_1_1;

		SET @str_1_1_1 = str_1_0_1;    
	    PREPARE prep_str_1_1_1 FROM @str_1_1_1;
		EXECUTE prep_str_1_1_1;

		
		SET difference_change_param = change_param_old - @change_param_curent;


		-- формируем блоки выбирая данные из заданной таблицы 
		IF difference_change_param <> 0 OR change_param_old <> 0 THEN 
		    SET select_str_0 = CONCAT("SELECT * FROM `", table_name, "` WHERE `Name` = '", @str, "' HAVING `sort_field` = '", @change_param_curent, "'");  
		    SET @select_str_1 = select_str_0;
		    PREPARE prep_select_str FROM @select_str_1;
			EXECUTE prep_select_str;            
			END IF;


		INSERT INTO `temp_test` (param_old, param_curent, change_param, field_str) 
				VALUES (change_param_old, @change_param_curent, difference_change_param, @str);

		SET change_param_old = @change_param_curent;
		SET w = (w + 1);
		END WHILE;


END

---------------------------------------------------------------------------------------------------
-- ХРАНИМАЯ ПРОЦЕДУРА  чистовик !!!
-- GrupAndSort(depth_of_search,sorting_direction,sort_field,group_field,table_name)	
	-- внешние параметры:
		depth_of_search	-- для передачи глубины поиска
		table_name	-- для передачи таблицы поиска
		sorting_direction	-- для передачи направления сортировки
		sort_field	-- для передачи поля по которому будет выполняться сортировка

BEGIN

	DECLARE i INTEGER DEFAULT 0;	-- для хранения количества строк временной таблицы
    DECLARE w INTEGER DEFAULT 0;	-- для перебора в цыкле
    DECLARE str CHARACTER (50) ;		-- для хранения строки извлекаемой из временной таблицы
    DECLARE create_str_0 CHARACTER (255);
    DECLARE select_str_0 CHARACTER (255);
    DECLARE str_1 CHARACTER (50) DEFAULT '';
	DECLARE str_1_0 CHARACTER (150);
	DECLARE change_param CHARACTER (50) DEFAULT '';

	DROP TABLE IF EXISTS `temp_test`;		-- для тестов

    SET create_str_0 = CONCAT(
		'CREATE /*TEMPORARY*/ TABLE `temp_test` 
			AS (SELECT DISTINCT `',group_field,'`, `', sort_field, '`
				FROM `', table_name, '` 
				GROUP BY `', group_field, '` ASC 
	            ORDER BY ', sort_field,' ', sorting_direction,
	            ' LIMIT ', depth_of_search, '
				)'  
			); 

    SET create_str = create_str_0; 	-- для тестов

	SET @create_str_1 = create_str_0;
    PREPARE prep_create_str FROM @create_str_1;
	EXECUTE prep_create_str;
	
    SELECT COUNT(*) FROM `temp_test` INTO i;
	
	WHILE w < i DO
    	
    	-- получаем, построчно, данные из временной таблицы в переменные @str->строка по которой будет формироваться блок, @str_1->параметр изменения которого отслеживаются  
		SET str_1_0 = CONCAT('SELECT `', group_field, '`, `', sort_field, '` FROM `temp_test` LIMIT ', w, ', 1 INTO @str, @str_1');
		SET @str_1_1 = str_1_0;    
	    PREPARE prep_str_1_1 FROM @str_1_1;
		EXECUTE prep_str_1_1;

		-- формируем блоки выбирая данные из заданной таблицы 
	    SET select_str_0 = CONCAT("SELECT * FROM `", table_name, "` WHERE `Name` = '", @str, "'" );  
	    SET @select_str_1 = select_str_0;
	    PREPARE prep_select_str FROM @select_str_1;
		EXECUTE prep_select_str;            
		
		SET w = (w + 1);
		END WHILE;

END
