

----ЧЕРНОВИК

DELIMITER //
CREATE PROCEDURE GrupAndSort()
     BEGIN
        CREATE TEMPORARY TABLE temp_test
        SELECT * FROM `Crypto_test`
        LIMIT 10;
     END
     //
DELIMITER ;

CALL GrupAndSort();

SHOW CREATE PROCEDURE GrupAndSort;
SHOW TABLE temp_test;
SHOW TABLE STATUS temp_test;
CREATE TEMPORARY TABLE `temp_test` LIKE `Crypto_test`;


CREATE TABLE `temp_test` SELECT `Name` FROM `Crypto_test`;		-- Создать промежуточную таблицу с групируемым полем
INSERT IGNORE INTO `temp_test` SELECT DISTINCT `Name` FROM `Crypto_test` ORDER BY `Name` DESC LIMIT 10;		-- добавляем выбраные записи в промежуточную таблицу  

SELECT COUNT(*) FROM `temp_test`;	-- Подсчёт количества строк в таблице
DECLARE iVAR INT DEFAULT COUNT(*) FROM `temp_test`;
SELECT * FROM `temp_test` LIMIT  
SET i=SELECT COUNT(*) FROM `temp_test`;

WHILE () DO
  запрос
END WHILE

        SELECT * 
            FROM `Crypto_test` ;


CREATE TEMPORARY TABLE `temp_test` SELECT `Name` FROM `Crypto_test`;		-- Создать промежуточную таблицу с групируемым полем

CREATE TEMPORARY TABLE `temp_test` AS (SELECT `Name` FROM `Crypto_test` ORDER BY `Name` DESC LIMIT 5);





BEGIN

	DECLARE i INTEGER DEFAULT 0;	-- для хранения количества строк временной таблицы
    DECLARE w INTEGER DEFAULT 0;	-- для перебора в цыкле
    DECLARE str CHARACTER (50);		-- для хранения строки извлекаемой из временной таблицы

	CREATE TEMPORARY TABLE `temp_test` 
		AS (SELECT DISTINCT `Name` 
			FROM table_name_for_serch -- здесь переменную считает строкой
			ORDER BY group_field DESC 
            LIMIT depth_of_search
			);       

    SELECT COUNT(*) FROM `temp_test` INTO i;
	
	WHILE w < i DO
       SELECT `Name` 
            FROM `temp_test` LIMIT w, 1 INTO str;
		SELECT * 
            FROM table_name_for_serch 
            WHERE `Name` = str;
            
		SET w = (w + 1);
		END WHILE;

	END







------ ТО ЧТО РАБОТАЕТ ---------------------------------------

-- внешние параметры:
	depth_of_search	-- для передачи глубины поиска
	table_name	-- для передачи таблицы поиска
	$sorting_direction	-- для передачи направления сортировки
	$group_field	-- для передачи поля по которому будет выполняться групировка

BEGIN

	DECLARE i INTEGER DEFAULT 0;	-- для хранения количества строк временной таблицы
    DECLARE w INTEGER DEFAULT 0;	-- для перебора в цыкле
    DECLARE str CHARACTER (50);		-- для хранения строки извлекаемой из временной таблицы
    DECLARE x CHARACTER (50);		-- для хранения строки извлекаемой из временной таблицы

    SET x = CONCAT("SELECT DISTINCT `Name` 
    			FROM `",table_name_for_serch,"` 
    			ORDER BY `",group_field,"` DESC 
                LIMIT ",depth_of_search);
    PREPARE col_name FROM x;
	CREATE TEMPORARY TABLE `temp_test` 
		AS (EXECUTE col_name);       

    SELECT COUNT(*) FROM `temp_test` INTO i;
	
	WHILE w < i DO
       SELECT `Name` 
            FROM `temp_test` LIMIT w, 1 INTO str;
		SELECT * 
            FROM (table_name_for_serch)
            WHERE `Name` = str;
            
		SET w = (w + 1);
		END WHILE;

	END


---------------------------------------------------------------------------------------------------
-- ХРАНИМАЯ ПРОЦЕДУРА  чистовик !!!
-- внешние параметры:
	depth_of_search	-- для передачи глубины поиска
	table_name	-- для передачи таблицы поиска
	$sorting_direction	-- для передачи направления сортировки
	$group_field	-- для передачи поля по которому будет выполняться групировка

BEGIN

	DECLARE i INTEGER DEFAULT 0;	-- для хранения количества строк временной таблицы
    DECLARE w INTEGER DEFAULT 0;	-- для перебора в цыкле
    DECLARE str CHARACTER (50);		-- для хранения строки извлекаемой из временной таблицы

	CREATE TEMPORARY TABLE `temp_test` 
		AS (SELECT DISTINCT `Name` 
			FROM `Crypto_1` 
			ORDER BY group_field DESC 
            LIMIT depth_of_search
			);       

    SELECT COUNT(*) FROM `temp_test` INTO i;
	
	WHILE w < i DO
       SELECT `Name` 
            FROM `temp_test` LIMIT w, 1 INTO str;
		SELECT * 
            FROM `Crypto_1`
            WHERE `Name` = str;
            
		SET w = (w + 1);
		END WHILE;

	END
