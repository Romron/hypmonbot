

----ЧЕРНОВИК

DELIMITER //
CREATE PROCEDURE GrupAndSort()
     BEGIN
        CREATE TEMPORARY TABLE temp_test
        SELECT * FROM `Crypto_test`
        LIMIT 10;
     END
     //
DELIMITER ;

CALL GrupAndSort();

SHOW CREATE PROCEDURE GrupAndSort;
SHOW TABLE temp_test;
SHOW TABLE STATUS temp_test;
CREATE TEMPORARY TABLE `temp_test` LIKE `Crypto_test`;


CREATE TABLE `temp_test` SELECT `Name` FROM `Crypto_test`;		-- Создать промежуточную таблицу с групируемым полем
INSERT IGNORE INTO `temp_test` SELECT DISTINCT `Name` FROM `Crypto_test` ORDER BY `Name` DESC LIMIT 10;		-- добавляем выбраные записи в промежуточную таблицу  

SELECT COUNT(*) FROM `temp_test`;	-- Подсчёт количества строк в таблице
DECLARE iVAR INT DEFAULT COUNT(*) FROM `temp_test`;
SELECT * FROM `temp_test` LIMIT  
SET i=SELECT COUNT(*) FROM `temp_test`;

WHILE () DO
  запрос
END WHILE

        SELECT * 
            FROM `Crypto_test` ;



    SET str = CONCAT(
		'CREATE TABLE `temp_test` 
			AS (SELECT DISTINCT `',group_field,'`, `', sort_field, '`
				FROM `', table_name, '` 
				ORDER BY `', sort_field, '` DESC 
	            LIMIT ', depth_of_search, '
				)'  
			);   
	create_str = str;
	SET @create_str = str;
	PREPARE prep_create_str FROM @create_str;
	EXECUTE prep_create_str;



CREATE TABLE `temp_test` AS (SELECT DISTINCT `Name`, `Capitalization` FROM `Crypto_1` ORDER BY `Capitalization` DESC LIMIT 10 )







------ ТО ЧТО РАБОТАЕТ ---------------------------------------


CREATE TABLE `temp_test` AS (SELECT DISTINCT `Name`, `Capitalization` FROM `Crypto_1` ORDER BY `Capitalization` DESC LIMIT 10 );


-- внешние параметры:
	depth_of_search	-- для передачи глубины поиска
	table_name	-- для передачи таблицы поиска
	sorting_direction	-- для передачи направления сортировки
	sort_field	-- для передачи поля по которому будет выполняться сортировка
	group_field	-- для передачи поля по которому будет выполняться сортировка

BEGIN

	DECLARE i INTEGER DEFAULT 0;	-- для хранения количества строк временной таблицы
    DECLARE w INTEGER DEFAULT 0;	-- для перебора в цыкле
    DECLARE create_str_0 CHARACTER (255);

    SET select_str_0 = CONCAT(
		"SELECT * 
				FROM `", table_name, "` 
				WHERE `Name` = '", str, "'"  
			);   
	SET @select_str_1 = select_str_0;
   
    PREPARE prep_select_str FROM @select_str_1;
	EXECUTE prep_select_str;		
	END

---------------------------------------------------------------------------------------------------
-- ХРАНИМАЯ ПРОЦЕДУРА  чистовик !!!
-- внешние параметры:
	depth_of_search	-- для передачи глубины поиска
	table_name	-- для передачи таблицы поиска
	$sorting_direction	-- для передачи направления сортировки
	$sort_field	-- для передачи поля по которому будет выполняться сортировка

BEGIN

	DECLARE i INTEGER DEFAULT 0;	-- для хранения количества строк временной таблицы
    DECLARE w INTEGER DEFAULT 0;	-- для перебора в цыкле
    DECLARE str CHARACTER (50);		-- для хранения строки извлекаемой из временной таблицы
    DECLARE create_str_0 CHARACTER (255);
    DECLARE select_str_0 CHARACTER (255);

    SET create_str_0 = CONCAT(
		'CREATE /*TEMPORARY*/ TABLE `temp_test` 
			AS (SELECT DISTINCT `',group_field,'`, `', sort_field, '`
				FROM `', table_name, '` 
				ORDER BY `', sort_field, '` DESC 
	            LIMIT ', depth_of_search, '
				)'  
			);   
	
    SET select_str_0 = CONCAT(
		"SELECT * 
				FROM `", table_name, "` 
				WHERE `Name` = '", str, "'"  
			);     

	SET @create_str_1 = create_str_0;
	SET @select_str_1 = select_str_0;

    PREPARE prep_create_str FROM @create_str_1;
	EXECUTE prep_create_str;

    SELECT COUNT(*) FROM `temp_test` INTO i;
	
	WHILE w < i DO
       SELECT `Name` 
            FROM `temp_test` LIMIT w, 1 INTO str;
		SELECT * 
            FROM `Crypto_1`
            WHERE `Name` = str;
            
		SET w = (w + 1);
		END WHILE;

	END
